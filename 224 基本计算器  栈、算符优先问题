题目描述：
给你一个字符串表达式 s ，请你实现一个基本计算器来计算并返回它的值。
示例 1：
输入：s = "1 + 1"
输出：2

示例 2：
输入：s = " 2-1 + 2 "
输出：3

示例 3：
输入：s = "(1+(4+5+2)-3)+(6+8)"
输出：23
 
提示：
1 <= s.length <= 3 * 105
s 由数字、'+'、'-'、'('、')'、和 ' ' 组成
s 表示一个有效的表达式


注意：
运算符只有+ - （ ） 要考虑更加简洁的代码逻辑

class Solution(object):
    def calculate(self, s):
        """
        :type s: str
        :rtype: int
        """
        ops = [1]
        sign = 1

        ret = 0
        n = len(s)
        i = 0
        while i < n:
            if s[i] == ' ':
                i += 1
            elif s[i] == '+':
                sign = ops[-1]
                i += 1
            elif s[i] == '-':
                sign = -ops[-1]
                i += 1
            elif s[i] == '(':
                ops.append(sign)
                i += 1
            elif s[i] == ')':
                ops.pop()
                i += 1
            else:
                num = 0
                while i < n and s[i].isdigit():  #检测当前位是否为数字
                    num = num * 10 + ord(s[i]) - ord('0')  #ord（）返回字符的ASCII码
                    i += 1
                ret += num * sign
        return ret
              
总结：
Python是真的不如C++好用啊啊啊啊！
又没有i++，现在又不能直接对比字符的ASCII码，还要有特殊的函数才能得到ASCII码，真的太麻烦了……
